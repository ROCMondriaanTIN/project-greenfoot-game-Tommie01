import greenfoot.*;  // (World, Actor, GreenfootImage, Greenfoot and MouseInfo)

public class Level3 extends MyWorld
{
    private CollisionEngine ce;


    public void act(){
        super.act();
        try{
            ce.update();
        }
        catch(Exception e){}
    }

    public Level3()
    {    
        Hero.alive = true;
        clearScreen();
        Hero.inLevel = true;
        Hero.hasKey = false;
        this.setBackground("bg1.png");
        int[][] map = {
                {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,140,140,140,140,140,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,140,140,140,140,140,-1,-1},
                {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,140,140,140,140,140,140,140,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,140,140,140,140,140,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,140,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,140,140,140,140,140,-1,-1,-1,-1,-1,-1,-1},
                {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,140,140,140,140,140,140,140,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,140,140,140,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                {-1,-1,-1,-1,-1,-1,-1,-1,140,140,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,140,140,140,140,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                {-1,-1,246,-1,-1,-1,-1,-1,-1,-1,-1,140,140,140,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,244,-1},
                {-1,-1,245,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,12,-1,243,-1},
                {-1,-1,8,8,8,8,-1,-1,-1,-1,-1,-1,-1,-1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-1,-1,-1,-1,-1,-1,8,8,8,8,-1,-1,-1,-1,-1,8,8,8,8,5,5,5,5,5,5,8,8,8,8},
                {-1,-1,6,6,6,6,-1,-1,-1,-1,-1,-1,-1,-1,6,6,6,6,6,6,6,6,6,6,6,6,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,6,6,6,-1,-1,-1,-1,-1,6,6,6,6,-1,-1,-1,-1,-1,-1,6,6,6,6},
                {-1,-1,6,6,6,6,-1,-1,-1,-1,-1,-1,-1,-1,6,6,6,6,6,6,6,6,6,6,6,6,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,6,6,6,11,1,1,1,11,6,6,6,6,-1,-1,-1,-1,-1,-1,6,6,6,6},
                {-1,-1,6,6,6,6,-1,-1,-1,-1,-1,-1,-1,-1,6,6,6,6,6,6,6,6,6,6,6,6,6,-1,613,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,6,6,6,10,10,10,10,10,6,6,6,6,-1,-1,-1,-1,-1,-1,6,6,6,6},
                {11,11,6,6,6,6,-1,5,5,-1,-1,-1,-1,-1,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-1,-1,-1,-1,-1,-1,6,6,6,6,10,10,10,10,10,6,6,6,6,-1,-1,-1,-1,-1,-1,6,6,6,6},
                {10,10,6,6,6,6,-1,-1,-1,-1,-1,-1,-1,-1,204,6,6,6,6,6,6,6,204,204,204,204,6,6,6,6,6,6,6,6,204,-1,-1,-1,-1,-1,-1,6,6,6,6,10,10,10,10,10,6,6,6,6,-1,-1,-1,-1,-1,-1,6,6,6,6},
                {10,10,6,6,6,6,-1,-1,-1,-1,-1,-1,-1,-1,204,204,204,6,6,204,204,204,204,204,204,204,204,204,204,6,6,6,204,204,204,-1,-1,-1,-1,-1,-1,6,6,6,6,10,10,10,10,10,6,6,6,6,-1,-1,-1,-1,-1,-1,6,6,6,6},
                {10,10,6,6,6,6,-1,-1,-1,-1,5,5,-1,-1,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,-1,-1,-1,-1,-1,-1,6,6,6,6,10,10,10,10,10,6,6,6,6,-1,-1,-1,-1,-1,-1,6,6,6,6},
                {10,10,6,6,6,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,6,6,6,10,10,10,10,10,6,6,6,6,-1,-1,-1,-1,-1,-1,6,6,6,6},
                {10,10,6,6,6,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,6,6,6,10,10,10,10,10,6,6,6,6,-1,-1,-1,-1,-1,-1,6,6,6,6},
                {10,10,6,6,6,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,6,6,6,10,10,10,10,10,6,6,6,6,-1,-1,-1,-1,-1,-1,6,6,6,6},
                {10,10,6,6,6,6,-1,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,5,5,-1,-1,-1,6,6,6,6,10,10,10,10,10,6,6,6,6,-1,-1,-1,-1,-1,-1,6,6,6,6},
                {10,10,6,6,6,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,6,6,6,10,10,10,10,10,6,6,6,6,-1,-1,-1,-1,-1,-1,6,6,6,6},
                {10,10,6,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,6,10,10,10,10,10,6,6,6,6,11,11,11,11,11,11,6,6,6,6},
                {10,10,6,6,6,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,6,6,6,10,10,10,10,10,6,6,6,6,10,10,10,10,10,10,6,6,6,6},
                {10,10,6,6,6,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,6,6,6,10,10,10,10,10,6,6,6,6,10,10,10,10,10,10,6,6,6,6},
                {10,10,6,6,6,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,6,6,6,10,10,10,10,10,6,6,6,6,10,10,10,10,10,10,6,6,6,6},

            };
        addObject(new waitSign(), 510, 1530);
        Hero hero = new Hero(Hero.player);
        TileEngine te = new TileEngine(this, 60, 60, map);
        Camera camera = new Camera(te);
        camera.follow(hero);
        addObject(camera, 0, 0);
        ce = new CollisionEngine(te, camera);
        ce.addCollidingMover(hero);
        addObject(hero, 300, 900); 
        addObject(new Platform(1700, 0), 1487, 1690);
        addObject(new Platform(700, 1), 2292, 1233);
        addObject(new Key(), 1191, 1452);
        if(Hero.diamonds != 3){
            addObject(new Diamond(), 3512, 312);
        }
        addObject(new GoldCoin(), 2504, 552);
        addObject(new GoldCoin(), 1826, 1092);
        addObject(new SilverCoin(), 1728, 1605);
        addObject(new SilverCoin(), 539, 612);
        addObject(new SilverCoin(), 905, 432);
        addObject(new SilverCoin(), 905, 432);
        addObject(new Enemy(), 1247, 885);
        addObject(new Enemy(), 1579, 585);
        hud();
    }
}

